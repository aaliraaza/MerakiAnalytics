SET hive.exec.dynamic.partition.mode=nonstrict;
SET hive.exec.dynamic.partition=true;

create database if not exists basedb;
DROP TABLE if EXISTS basedb.xchannel_xbrand_visits;
CREATE TABLE if not exists basedb.xchannel_xbrand_visits
(
    Source string,
    customerKey_RAW string,
	customerKey string,
	customerKey_INT int,
	customerBrand string,
	gender string,
	YearOfBirth string,
	age int,
	ageBand string,
	isBarredRetail string,
	isBarredOnline string,
	IsSelfExclude string,
	CRMEmailOptInRetail string,
	CRMEmailOptInOnline string,
	CRMPostalOptInRetail string,
	CRMPostalOptInOnline string,
	CRMSMSOptInRetail string,
	CRMSMSOptInOnline string,
	CRMTelephoneOptInRetail string,
	CRMTelephoneOptInOnline string,
	IsVIPRetail string,
	VIPLevelRetail string,
	IsVIPOnline string,
	VIPLevelOnline string,
	venueCode string,
	venueDesc string,
	venueAddress1 string,
	venueCity string,
	venuePostcode string,
	venueLat float,
	venueLong float,
	venueAreaDesc string,
	venueBrandDesc string,
	venueChannelDesc string,
	dayId int,
	dayDateTime timestamp,
	MarkDayName string,
	MarkDayOfMonth int,
	MarkDayOfQuarter int,
	MarkDayOfHalf int,
	MarkDayOfYear int,
	MarkMonthDateTime timestamp,
	MarkMonth string,
	MarkMonthOfQuarter int,
	MarkMonthOfHalf int,
	MarkMonthOfYear int,
	MarkQuarterDateTime timestamp,
	MarkQuarter string,
	MarkQuarterOfHalf int,
	MarkQuarterOfYear int,
	MarkHalfDateTime timestamp,
	MarkHalf string,
	MarkHalfOfYear int,
	MarkYearfDateTime timestamp,
	MarkYear int,
	FiscDayName string,
	FiscDayOfWeek int,
	FiscDayOfPeriod int,
	FiscDayOfQuarter int,
	FiscDayOfHalf int,
	FiscDayOfYear int,
	FiscWeekDateTime timestamp,
	FiscWeek string,
	FiscWeekOfPeriod int,
	FiscWeekOfQuarter int,
	FiscWeekOfHalf int,
	FiscWeekOfYear int,
	FiscPeriodDateTime timestamp,
	FiscPeriod string,
	FiscPeriodOfQuarter int,
	FiscPeriodOfHalf int,
	FiscPeriodOfYear int,
	FiscQuarterDateTime timestamp,
	FiscQuarter string,
	FiscQuarterOfHalf int,
	FiscQuarterOfYear int,
	FiscHalfDateTime timestamp,
	FiscHalf string,
	FiscHalfOfYear int,
	FiscYearfDateTime timestamp,
	FiscYear string,
	sessCode string,
	sessName string,
	sessGroupName string,
	dayId_Visit int,
	visitHourOfDay int,
	sec_venueAreaCode string,
	sec_venueBrandCode string,
	Customers_customerKey string,
	FiscalCalendar_dayId int,
	MarketCalendar_dayId int,
	Sessions_sessCode string,
	Venues_venueCode string
)
PARTITIONED BY (groupkeydate STRING)
CLUSTERED BY(customerKey) SORTED BY(dayDateTime) INTO 10 BUCKETS 
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS ORC
LOCATION 'wasbs://base@rgdsadldev.blob.core.windows.net/xchannel_xbrand_visits/';


MSCK REPAIR TABLE rawdb.xchannel_xbrand_visits;


INSERT OVERWRITE TABLE basedb.xchannel_xbrand_visits PARTITION (groupkeydate)
SELECT
    Source,
    customerKey_RAW,
	customerKey,
	customerKey_INT,
	customerBrand,
	gender,
	YearOfBirth,
	age,
	ageBand,
	isBarredRetail,
	isBarredOnline,
	IsSelfExclude,
	CRMEmailOptInRetail,
	CRMEmailOptInOnline,
	CRMPostalOptInRetail,
	CRMPostalOptInOnline,
	CRMSMSOptInRetail,
	CRMSMSOptInOnline,
	CRMTelephoneOptInRetail,
	CRMTelephoneOptInOnline,
	IsVIPRetail,
	VIPLevelRetail,
	IsVIPOnline,
	VIPLevelOnline,
	venueCode,
	venueDesc,
	venueAddress1,
	venueCity,
	venuePostcode,
	venueLat,
	venueLong,
	venueAreaDesc,
	venueBrandDesc,
	venueChannelDesc,
	dayId,
	from_utc_timestamp(UNIX_TIMESTAMP(dayDateTime, "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as dayDateTime,
	MarkDayName,
	MarkDayOfMonth,
	MarkDayOfQuarter,
	MarkDayOfHalf,
	MarkDayOfYear,
	from_utc_timestamp(UNIX_TIMESTAMP(MarkMonthDateTime, "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as MarkMonthDateTime,
	MarkMonth,
	MarkMonthOfQuarter,
	MarkMonthOfHalf,
	MarkMonthOfYear,
	from_utc_timestamp(UNIX_TIMESTAMP(MarkQuarterDateTime, "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as MarkQuarterDateTime,
	MarkQuarter,
	MarkQuarterOfHalf,
	MarkQuarterOfYear,
	from_utc_timestamp(UNIX_TIMESTAMP(MarkHalfDateTime , "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as MarkHalfDateTime,
	MarkHalf,
	MarkHalfOfYear,
	from_utc_timestamp(UNIX_TIMESTAMP(MarkYearfDateTime, "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as MarkYearfDateTime,
	MarkYear,
	FiscDayName,
	FiscDayOfWeek,
	FiscDayOfPeriod,
	FiscDayOfQuarter,
	FiscDayOfHalf,
	FiscDayOfYear,
	from_utc_timestamp(UNIX_TIMESTAMP(FiscWeekDateTime, "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as FiscWeekDateTime,
	FiscWeek,
	FiscWeekOfPeriod,
	FiscWeekOfQuarter,
	FiscWeekOfHalf,
	FiscWeekOfYear,
	from_utc_timestamp(UNIX_TIMESTAMP(FiscPeriodDateTime, "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as FiscPeriodDateTime,
	FiscPeriod,
	FiscPeriodOfQuarter,
	FiscPeriodOfHalf,
	FiscPeriodOfYear,
	from_utc_timestamp(UNIX_TIMESTAMP(FiscQuarterDateTime, "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as FiscQuarterDateTime,
	FiscQuarter,
	FiscQuarterOfHalf,
	FiscQuarterOfYear,
	from_utc_timestamp(UNIX_TIMESTAMP(FiscHalfDateTime, "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as FiscHalfDateTime,
	FiscHalf,
	FiscHalfOfYear,
	from_utc_timestamp(UNIX_TIMESTAMP(FiscYearfDateTime, "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")*1000,'GMT') as FiscYearfDateTime,
	FiscYear,
	sessCode,
	sessName,
	sessGroupName,
	dayId_Visit,
	visitHourOfDay,
	sec_venueAreaCode,
	sec_venueBrandCode,
	Customers_customerKey,
	FiscalCalendar_dayId,
	MarketCalendar_dayId,
	Sessions_sessCode,
	Venues_venueCode,
    GroupDate
from rawdb.xchannel_xbrand_visits;