{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "LA_API_Version": {
      "type": "string"
    },
    "LA_Publisher_Name": {
      "type": "string"
    },
    "LA_Subscriber_Name": {
      "type": "string"
    },
    "LA_Logging_Name": {
      "type": "string"
    },
    "serviceBusConnectionString": {
      "type": "string"
    },
    "serviceBusConnectionStringdisplayName": {
      "type": "string"
    },
    "SQL_Server_Name": {
      "type": "string"
    },
    "SQL_Database_Name": {
      "type": "string"
    },
    "SQL_Username": {
      "type": "securestring"
    },
    "SQL_Password": {
      "type": "securestring"
    },
    "integrationAccountRGName": {
      "type": "string"
    },
    "integrationAccountName": {
      "type": "string"
    },
    "functionsRGName": {
      "type": "string"
    },
    "functionsContainerAppName": {
      "type": "string"
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "australiaeast",
        "australiasoutheast",
        "brazilsouth",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "japaneast",
        "japanwest",
        "northcentralus",
        "northeurope",
        "southcentralus",
        "southeastasia",
        "westeurope",
        "westus"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
      "TestName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 80,
          "metadata": {
              "description": "Name of the Logic App."
          }
      },
      "TestLocation": {
          "type": "string",
          "defaultValue": "[resourceGroup().location]",
          "allowedValues": [
              "[resourceGroup().location]",
              "australiaeast",
              "australiasoutheast",
              "brazilsouth",
              "centralus",
              "eastasia",
              "eastus",
              "eastus2",
              "japaneast",
              "japanwest",
              "northcentralus",
              "northeurope",
              "southcentralus",
              "southeastasia",
              "westeurope",
              "westus"
          ],
          "metadata": {
              "description": "Location of the Logic App."
          }
      }
  },
  "variables": {
    "serviceBusConnectionName": "KU_Integration_ServiceBusConnection_Prod",
    "sqlConnectionName": "LoggingServiceSQLConnectionProd"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2015-08-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[variables('serviceBusConnectionName')]",
      "tags": {
        "displayName": "apiconnectionservicebus"
      },
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/servicebus')]"
        },
        "displayName": "[parameters('serviceBusConnectionStringdisplayName')]",
        "parameterValues": {
          "connectionString": "[parameters('serviceBusConnectionString')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2015-08-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[variables('sqlConnectionName')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/sql')]"
        },
        "displayName": "[parameters('SQL_Server_Name')]",
        "parameterValues": {
          "server": "[parameters('SQL_Server_Name')]",
          "database": "[parameters('SQL_Database_Name')]",
          "username": "[parameters('SQL_Username')]",
          "password": "[parameters('SQL_Password')]"

        }
      }
    },
    {
      "comments": "Generalized from resource: '/subscriptions/59917f2a-0c8e-4062-a7eb-13897b2d7cdd/resourceGroups/RG-Kingston-POC/providers/Microsoft.Logic/workflows/LA.CreateUser.Canvas'.",
      "type": "Microsoft.Logic/workflows",
      "name": "[parameters('LA_Publisher_Name')]",
      "apiVersion": "2016-06-01",
      "location": "westeurope",
      "tags": {
        "displayName": "LA.Publisher.SalesData"
      },
      "properties": {
        "state": "Enabled",
        "integrationAccount": {
          "id": "[concat(subscription().id, '/resourceGroups/', parameters('integrationAccountRGName'), '/providers/Microsoft.Logic/integrationAccounts/', parameters('integrationAccountName'))]"
        },
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {}
              }
            }
          },
          "actions": {
            "Filter_array": {
              "runAfter": {
                "Scope": [
                  "Failed"
                ]
              },
              "type": "Query",
              "inputs": {
                "from": "@result('Scope')",
                "where": "@equals(item()['status'], 'Failed')"
              }
            },
            "For_Each_Error": {
              "foreach": "@body('Filter_array')",
              "actions": {
                "LogMessage": {
                  "runAfter": {},
                  "type": "ApiManagement",
                  "inputs": {
                    "api": {
                      //"id": "[parameters('workflows_LA.Publisher.SFA_id_1')]",
                      //"id": "[concat(subscription().id, '/resourceGroups/', parameters('apimRGName'), '/providers/Microsoft.ApiManagement/service/', parameters('apimInstanceName'), '/apis/', parameters('apim_service_logging'))]"

                    },
                    "body": "@string(item()?['outputs'])",
                    "headers": {
                      "correlationId": "@item()['clientTrackingId']",
                      "failedActionName": "@item()['name']",
                      "loggingStatus": "@item()['status']"
                    },
                    "method": "post",
                    "pathTemplate": {
                      "parameters": {},
                      "template": "/logging/LogMessage"
                    },
                    "subscriptionKey": "4e77e0b57d984a8aa5723b6245f13c74"
                  }
                }
              },
              "runAfter": {
                "Filter_array": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Scope": {
              "actions": {
                "FormatJsonPayloadOmitRoot": {
                  "runAfter": {
                    "Transform_XML": [
                      "Succeeded"
                    ]
                  },
                  "type": "Function",
                  "inputs": {
                    "body": "@json(body('Transform_XML'))",
                    "function": {
                      //"id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_FASfaIntegration_name')), '/functions/FormatJsonPayloadOmitRoot')]",
                      "id": "[concat(subscription().id, '/resourceGroups/', parameters('functionsRGName'), '/providers/Microsoft.Web/sites/', parameters('functionsContainerAppName'), '/functions/sfaintegrationfunctions')]"
                    },
                    "headers": {
                      "Content-Type": "application/json"
                    }
                  }
                },
                "Response": {
                  "runAfter": {
                    "Send_message": [
                      "Succeeded"
                    ]
                  },
                  "type": "Response",
                  "inputs": {
                    "body": "@body('FormatJsonPayloadOmitRoot')",
                    "statusCode": 200
                  }
                },
                "Send_message": {
                  "runAfter": {
                    "FormatJsonPayloadOmitRoot": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "ContentData": "@{base64(body('Transform_XML'))}"
                    },
                    "host": {
                      "api": {
                        /*"runtimeUrl": "https://logic-apis-westeurope.azure-apim.net/apim/servicebus"*/
                      },
                      "connection": {
                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/@{encodeURIComponent('salesinformation')}/messages"
                  }
                },
                "Transform_XML": {
                  "runAfter": {
                    "XML_Validation": [
                      "Succeeded"
                    ]
                  },
                  "type": "Xslt",
                  "inputs": {
                    "content": "@{triggerBody()}",
                    "integrationAccount": {
                      "map": {
                        "name": "SfaSalesInformationToCanonicalSalesInformation"
                      }
                    }
                  }
                },
                "XML_Validation": {
                  "runAfter": {},
                  "type": "XmlValidation",
                  "inputs": {
                    "content": "@{triggerBody()}",
                    "integrationAccount": {
                      "schema": {
                        "name": "Sfa_SalesInformation"
                      }
                    }
                  }
                }
              },
              "runAfter": {},
              "type": "Scope"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('serviceBusConnectionName'))]"
              }
            }
          }
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('serviceBusConnectionName'))]"
      ]
    },
    {
      "comments": "Generalized from resource: '/subscriptions/59917f2a-0c8e-4062-a7eb-13897b2d7cdd/resourceGroups/RG-Kingston-POC/providers/Microsoft.Logic/workflows/LA.CreateUser.Canvas'.",
      "type": "Microsoft.Logic/workflows",
      "name": "[parameters('LA_Subscriber_Name')]",
      "apiVersion": "2016-06-01",
      "location": "westeurope",
      "tags": {
        "displayName": "LA.Subscriber.SalesData"
      },
      "properties": {
        "state": "Enabled",
        "integrationAccount": {
          "id": "[concat(subscription().id, '/resourceGroups/', parameters('integrationAccountRGName'), '/providers/Microsoft.Logic/integrationAccounts/', parameters('integrationAccountName'))]"
        },
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_message_is_received_in_a_topic_subscription_(auto-complete)": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 1
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "api": {
                   /* "runtimeUrl": "https://logic-apis-westeurope.azure-apim.net/apim/servicebus" */
                  },
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent('salesinformation')}/subscriptions/@{encodeURIComponent('MIRSubscription')}/messages/head",
                "queries": {
                  "subscriptionType": "Main"
                }
              }
            }
          },
          "actions": {
            "Filter_array": {
              "runAfter": {
                "Scope": [
                  "Failed"
                ]
              },
              "type": "Query",
              "inputs": {
                "from": "@result('Scope')",
                "where": "@equals(item()['status'], 'Failed')"
              }
            },
            "For_each": {
              "foreach": "@body('Filter_array')",
              "actions": {
                "LogMessage": {
                  "runAfter": {},
                  "type": "ApiManagement",
                  "inputs": {
                    "api": {
                      //"id": "[parameters('workflows_LA.Subscriber.Mri_id_1')]",
                     // "id": "[concat(subscription().id, '/resourceGroups/', parameters('apimRGName'), '/providers/Microsoft.ApiManagement/service/', parameters('apimInstanceName'), '/apis/', parameters('apim_service_logging'))]"

                    },
                    "body": "@string(item())",
                    "headers": {
                      "correlationId": "@item()['clientTrackingId']",
                      "failedActionName": "@item()['name']",
                      "loggingStatus": "@item()['status']"
                    },
                    "method": "post",
                    "pathTemplate": {
                      "parameters": {},
                      "template": "/logging/LogMessage"
                    },
                    "subscriptionKey": "4e77e0b57d984a8aa5723b6245f13c74"
                  }
                }
              },
              "runAfter": {
                "Filter_array": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Scope": {
              "actions": {
                "FormatJsonPayloadOmitRoot": {
                  "runAfter": {
                    "Transform_XML": [
                      "Succeeded"
                    ]
                  },
                  "type": "Function",
                  "inputs": {
                    "body": "@json(body('Transform_XML'))",
                    "function": {
                      //"id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_FASfaIntegration_name')), '/functions/FormatJsonPayloadOmitRoot')]",
                      "id": "[concat(subscription().id, '/resourceGroups/', parameters('functionsRGName'), '/providers/Microsoft.Web/sites/', parameters('functionsContainerAppName'), '/functions/sfaintegrationfunctions')]"

                    }
                  }
                },
                "HTTP": {
                  "runAfter": {
                    "Until": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "method": "POST",
                    "uri": "http://requestb.in/ozx0qvoz"
                  }
                },
                "Send_message": {
                  "runAfter": {
                    "Until": [
                      "Failed"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "ContentData": "@{triggerBody()?['ContentData']}"
                    },
                    "host": {
                      "api": {
                       /* "runtimeUrl": "https://logic-apis-westeurope.azure-apim.net/apim/servicebus" */
                      },
                      "connection": {
                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/@{encodeURIComponent('retrysalesinformation')}/messages"
                  }
                },
                "Transform_XML": {
                  "runAfter": {},
                  "type": "Xslt",
                  "inputs": {
                    "content": "@{base64ToString(triggerBody()?['ContentData'])}",
                    "integrationAccount": {
                      "map": {
                        "name": "CanonicalSalesInformationToMriSalesInformation"
                      }
                    }
                  }
                },
                "Until": {
                  "actions": {
                    "Post_Sales_Data": {
                      "runAfter": {},
                      "type": "ApiManagement",
                      "inputs": {
                        "api": {
                          //"id": "[parameters('workflows_LA.Subscriber.Mri_id_2')]",
                         // "id": "[concat(subscription().id, '/resourceGroups/', parameters('apimRGName'), '/providers/Microsoft.ApiManagement/service/', parameters('apimInstanceName'), '/apis/', parameters('apim_service_MRI'))]"

                        },
                        "method": "post",
                        "pathTemplate": {
                          "parameters": {},
                          "template": "/mri/posts"
                        },
                        "subscriptionKey": "4e77e0b57d984a8aa5723b6245f13c74"
                      }
                    }
                  },
                  "runAfter": {
                    "FormatJsonPayloadOmitRoot": [
                      "Succeeded"
                    ]
                  },
                  "expression": "@equals(actions('Post_Sales_Data')?['status'], 'Succeeded')",
                  "limit": {
                    "count": 3,
                    "timeout": "PT2M"
                  },
                  "type": "Until"
                }
              },
              "runAfter": {},
              "type": "Scope"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('serviceBusConnectionName'))]"
              }
            }
          }
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('serviceBusConnectionName'))]"
      ]
    },
    {
      "comments": "Generalized from resource: '/subscriptions/59917f2a-0c8e-4062-a7eb-13897b2d7cdd/resourceGroups/RG-Kingston-POC/providers/Microsoft.Logic/workflows/LA.CreateUser.Canvas'.",
      "type": "Microsoft.Logic/workflows",
      "name": "[parameters('LA_Logging_Name')]",
      "apiVersion": "2016-06-01",
      "location": "westeurope",
      "tags": {
        "displayName": "LA.Logging.SalesData"
      },
      "properties": {
        "state": "Enabled",
        "integrationAccount": {
          "id": "[concat(subscription().id, '/resourceGroups/', parameters('integrationAccountRGName'), '/providers/Microsoft.Logic/integrationAccounts/', parameters('integrationAccountName'))]"
        },
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {}
              }
            }
          },
          "actions": {
            "Insert_row": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "CorrelationId": "@triggerOutputs()['headers']?['x-ms-client-tracking-id']",
                  "FailedActionName": "@triggerOutputs()['headers']?['failedActionName']",
                  "LogDateTime": "@utcnow()",
                  "Payload": "@{string(triggerBody())}",
                  "Status": "@triggerOutputs()['headers']?['loggingStatus']",
                  "WorkflowName": "@triggerOutputs()['headers']?['x-ms-workflow-name']"
                },
                "host": {
                  "api": {
                    /*"runtimeUrl": "https://logic-apis-westeurope.azure-apim.net/apim/sql" */
                  },
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[Log_Message]'))}/items"
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "sql": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('sqlConnectionName'))]"
              }
            }
          }
        }
      },
      "resources": [],
      "dependsOn": [
       
      ]
    }
  ],
  "outputs": {}
}